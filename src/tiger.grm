%{
#include <stdio.h>
#include "util.h"
#include "errormsg.h"

int yylex(void); /* function prototype */

void yyerror(char *s)
{
 EM_error(EM_tokPos, "%s", s);
}
%}


%union {
	int pos;
	int ival;
	string sval;
	}

%token <sval> ID STRING
%token <ival> INT

%token 
  COMMA COLON SEMICOLON LPAREN RPAREN LBRACK RBRACK 
  LBRACE RBRACE DOT 
  PLUS MINUS TIMES DIVIDE EQ NEQ LT LE GT GE
  AND OR ASSIGN
  ARRAY IF THEN ELSE WHILE FOR TO DO LET IN END OF 
  BREAK NIL
  FUNCTION VAR TYPE 

%start program
%nonassoc THEN DO TYPE FUNCTION ID
%nonassoc ASSIGN LBRACK ELSE OF
%left OR
%left AND
%nonassoc EQ NEQ LE LT GT GE
%left PLUS MINUS
%left TIMES DIVIDE
%left UMINUS
%%
program:	  primyexp
			;

primyexp:	/* empty */
			| exp
			;

exp:		  INT
			| STRING
			| NIL
			| ID LPAREN arglist RPAREN
			| lvalue
			| LPAREN expseq RPAREN
			| condexp
			| letexp
			| exp OR exp
			| exp AND exp
			| exp LT exp
			| exp GT exp
			| exp LE exp
			| exp GE exp
			| exp PLUS exp
			| exp MINUS exp
			| exp TIMES exp
			| exp DIVIDE exp
			| exp EQ exp
			| exp NEQ exp
			| ID LBRACK exp RBRACK OF exp
			| ID LBRACE arglist RBRACE
			| lvalue ASSIGN exp
			| MINUS exp %prec UMINUS
			| BREAK
			;

letexp:		  LET decs IN expseq END
			;

arglist:	/* empty */
			| nonarglist
			;
			
nonarglist:   exp
			| nonarglist COMMA exp
			;
			
lvalue:		  ID
			| ID LBRACK exp RBRACK
			| lvalue LBRACK exp RBRACK
			| lvalue DOT ID
			;

expseq:		  primyexp
			| expseq SEMICOLON primyexp
			;

			
condexp:	  IF exp THEN exp ELSE exp
			| IF exp THEN exp
			| WHILE exp DO exp
			| FOR ID ASSIGN exp TO exp DO exp
			;
			
decs:		/* empty */
			| decs dec
			;

dec:		  tydec
			| vardec
			| fundec
			;
			
tydec:		  TYPE ID EQ ty
			;

ty:			  ID
			| LBRACE tyfields RBRACE
			| ARRAY OF ID
			;

tyfields:	  /* empty */
			|  tyfields1
			;

tyfields1:	  tyfield
			| tyfields1 COMMA tyfield
			;

tyfield:	  ID COLON ID
			;

vardec:		  VAR ID ASSIGN exp
			| VAR ID COLON ID ASSIGN exp
			;

fundec:		  FUNCTION ID LPAREN tyfields RPAREN EQ exp
			| FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp
			;
