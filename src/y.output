Grammar

    0 $accept: program $end

    1 program: primyexp

    2 primyexp: /* empty */
    3         | exp

    4 exp: INT
    5    | STRING
    6    | NIL
    7    | id LPAREN arglist RPAREN
    8    | lvalue
    9    | LPAREN expseq RPAREN
   10    | condexp
   11    | letexp
   12    | exp OR exp
   13    | exp AND exp
   14    | exp LT exp
   15    | exp GT exp
   16    | exp LE exp
   17    | exp GE exp
   18    | exp PLUS exp
   19    | exp MINUS exp
   20    | exp TIMES exp
   21    | exp DIVIDE exp
   22    | exp EQ exp
   23    | exp NEQ exp
   24    | id LBRACK exp RBRACK OF exp
   25    | id LBRACE reclist RBRACE
   26    | lvalue ASSIGN exp
   27    | MINUS exp
   28    | BREAK

   29 reclist: /* empty */
   30        | nonreclist

   31 nonreclist: id EQ exp
   32           | nonreclist COMMA id EQ exp

   33 letexp: LET decs IN expseq END

   34 arglist: /* empty */
   35        | nonarglist

   36 nonarglist: exp
   37           | nonarglist COMMA exp

   38 lvalue: id
   39       | id LBRACK exp RBRACK
   40       | lvalue LBRACK exp RBRACK
   41       | lvalue DOT id

   42 expseq: primyexp
   43       | expseq SEMICOLON primyexp

   44 condexp: IF exp THEN exp ELSE exp
   45        | IF exp THEN exp
   46        | WHILE exp DO exp
   47        | FOR id ASSIGN exp TO exp DO exp

   48 decs: /* empty */
   49     | decs dec

   50 dec: tydecs
   51    | vardec
   52    | fundecs

   53 tydecs: tydec
   54       | tydecs tydec

   55 tydec: TYPE id EQ ty

   56 ty: id
   57   | LBRACE tyfields RBRACE
   58   | ARRAY OF id

   59 tyfields: /* empty */
   60         | tyfields1

   61 tyfields1: tyfield
   62          | tyfields1 COMMA tyfield

   63 tyfield: id COLON id

   64 vardec: VAR id ASSIGN exp
   65       | VAR id COLON id ASSIGN exp

   66 id: ID

   67 fundecs: fundec
   68        | fundecs fundec

   69 fundec: FUNCTION id LPAREN tyfields RPAREN EQ exp
   70       | FUNCTION id LPAREN tyfields RPAREN COLON id EQ exp


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 66
STRING (259) 5
INT (260) 4
COMMA (261) 32 37 62
COLON (262) 63 65 70
SEMICOLON (263) 43
LPAREN (264) 7 9 69 70
RPAREN (265) 7 9 69 70
LBRACK (266) 24 39 40
RBRACK (267) 24 39 40
LBRACE (268) 25 57
RBRACE (269) 25 57
DOT (270) 41
PLUS (271) 18
MINUS (272) 19 27
TIMES (273) 20
DIVIDE (274) 21
EQ (275) 22 31 32 55 69 70
NEQ (276) 23
LT (277) 14
LE (278) 16
GT (279) 15
GE (280) 17
AND (281) 13
OR (282) 12
ASSIGN (283) 26 47 64 65
ARRAY (284) 58
IF (285) 44 45
THEN (286) 44 45
ELSE (287) 44
WHILE (288) 46
FOR (289) 47
TO (290) 47
DO (291) 46 47
LET (292) 33
IN (293) 33
END (294) 33
OF (295) 24 58
BREAK (296) 28
NIL (297) 6
FUNCTION (298) 69 70
VAR (299) 64 65
TYPE (300) 55
LOW (301)
UMINUS (302)


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
program (49)
    on left: 1, on right: 0
primyexp (50)
    on left: 2 3, on right: 1 42 43
exp (51)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
    24 25 26 27 28, on right: 3 12 13 14 15 16 17 18 19 20 21 22 23
    24 26 27 31 32 36 37 39 40 44 45 46 47 64 65 69 70
reclist (52)
    on left: 29 30, on right: 25
nonreclist (53)
    on left: 31 32, on right: 30 32
letexp (54)
    on left: 33, on right: 11
arglist (55)
    on left: 34 35, on right: 7
nonarglist (56)
    on left: 36 37, on right: 35 37
lvalue (57)
    on left: 38 39 40 41, on right: 8 26 40 41
expseq (58)
    on left: 42 43, on right: 9 33 43
condexp (59)
    on left: 44 45 46 47, on right: 10
decs (60)
    on left: 48 49, on right: 33 49
dec (61)
    on left: 50 51 52, on right: 49
tydecs (62)
    on left: 53 54, on right: 50 54
tydec (63)
    on left: 55, on right: 53 54
ty (64)
    on left: 56 57 58, on right: 55
tyfields (65)
    on left: 59 60, on right: 57 69 70
tyfields1 (66)
    on left: 61 62, on right: 60 62
tyfield (67)
    on left: 63, on right: 61 62
vardec (68)
    on left: 64 65, on right: 51
id (69)
    on left: 66, on right: 7 24 25 31 32 38 39 41 47 55 56 58 63 64
    65 69 70
fundecs (70)
    on left: 67 68, on right: 52 68
fundec (71)
    on left: 69 70, on right: 67 68


state 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 2 (primyexp)

    program   go to state 12
    primyexp  go to state 13
    exp       go to state 14
    letexp    go to state 15
    lvalue    go to state 16
    condexp   go to state 17
    id        go to state 18


state 1

   66 id: ID .

    $default  reduce using rule 66 (id)


state 2

    5 exp: STRING .

    $default  reduce using rule 5 (exp)


state 3

    4 exp: INT .

    $default  reduce using rule 4 (exp)


state 4

    9 exp: LPAREN . expseq RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 2 (primyexp)

    primyexp  go to state 19
    exp       go to state 14
    letexp    go to state 15
    lvalue    go to state 16
    expseq    go to state 20
    condexp   go to state 17
    id        go to state 18


state 5

   27 exp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 21
    letexp   go to state 15
    lvalue   go to state 16
    condexp  go to state 17
    id       go to state 18


state 6

   44 condexp: IF . exp THEN exp ELSE exp
   45        | IF . exp THEN exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 22
    letexp   go to state 15
    lvalue   go to state 16
    condexp  go to state 17
    id       go to state 18


state 7

   46 condexp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 23
    letexp   go to state 15
    lvalue   go to state 16
    condexp  go to state 17
    id       go to state 18


state 8

   47 condexp: FOR . id ASSIGN exp TO exp DO exp

    ID  shift, and go to state 1

    id  go to state 24


state 9

   33 letexp: LET . decs IN expseq END

    $default  reduce using rule 48 (decs)

    decs  go to state 25


state 10

   28 exp: BREAK .

    $default  reduce using rule 28 (exp)


state 11

    6 exp: NIL .

    $default  reduce using rule 6 (exp)


state 12

    0 $accept: program . $end

    $end  shift, and go to state 26


state 13

    1 program: primyexp .

    $default  reduce using rule 1 (program)


state 14

    3 primyexp: exp .
   12 exp: exp . OR exp
   13    | exp . AND exp
   14    | exp . LT exp
   15    | exp . GT exp
   16    | exp . LE exp
   17    | exp . GE exp
   18    | exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   22    | exp . EQ exp
   23    | exp . NEQ exp

    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    AND     shift, and go to state 37
    OR      shift, and go to state 38

    $default  reduce using rule 3 (primyexp)


state 15

   11 exp: letexp .

    $default  reduce using rule 11 (exp)


state 16

    8 exp: lvalue .
   26    | lvalue . ASSIGN exp
   40 lvalue: lvalue . LBRACK exp RBRACK
   41       | lvalue . DOT id

    LBRACK  shift, and go to state 39
    DOT     shift, and go to state 40
    ASSIGN  shift, and go to state 41

    $default  reduce using rule 8 (exp)


state 17

   10 exp: condexp .

    $default  reduce using rule 10 (exp)


state 18

    7 exp: id . LPAREN arglist RPAREN
   24    | id . LBRACK exp RBRACK OF exp
   25    | id . LBRACE reclist RBRACE
   38 lvalue: id .
   39       | id . LBRACK exp RBRACK

    LPAREN  shift, and go to state 42
    LBRACK  shift, and go to state 43
    LBRACE  shift, and go to state 44

    $default  reduce using rule 38 (lvalue)


state 19

   42 expseq: primyexp .

    $default  reduce using rule 42 (expseq)


state 20

    9 exp: LPAREN expseq . RPAREN
   43 expseq: expseq . SEMICOLON primyexp

    SEMICOLON  shift, and go to state 45
    RPAREN     shift, and go to state 46


state 21

   12 exp: exp . OR exp
   13    | exp . AND exp
   14    | exp . LT exp
   15    | exp . GT exp
   16    | exp . LE exp
   17    | exp . GE exp
   18    | exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   27    | MINUS exp .

    $default  reduce using rule 27 (exp)


state 22

   12 exp: exp . OR exp
   13    | exp . AND exp
   14    | exp . LT exp
   15    | exp . GT exp
   16    | exp . LE exp
   17    | exp . GE exp
   18    | exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   44 condexp: IF exp . THEN exp ELSE exp
   45        | IF exp . THEN exp

    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    AND     shift, and go to state 37
    OR      shift, and go to state 38
    THEN    shift, and go to state 47


state 23

   12 exp: exp . OR exp
   13    | exp . AND exp
   14    | exp . LT exp
   15    | exp . GT exp
   16    | exp . LE exp
   17    | exp . GE exp
   18    | exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   46 condexp: WHILE exp . DO exp

    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    AND     shift, and go to state 37
    OR      shift, and go to state 38
    DO      shift, and go to state 48


state 24

   47 condexp: FOR id . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 49


state 25

   33 letexp: LET decs . IN expseq END
   49 decs: decs . dec

    IN        shift, and go to state 50
    FUNCTION  shift, and go to state 51
    VAR       shift, and go to state 52
    TYPE      shift, and go to state 53

    dec      go to state 54
    tydecs   go to state 55
    tydec    go to state 56
    vardec   go to state 57
    fundecs  go to state 58
    fundec   go to state 59


state 26

    0 $accept: program $end .

    $default  accept


state 27

   18 exp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 60
    letexp   go to state 15
    lvalue   go to state 16
    condexp  go to state 17
    id       go to state 18


state 28

   19 exp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 61
    letexp   go to state 15
    lvalue   go to state 16
    condexp  go to state 17
    id       go to state 18


state 29

   20 exp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 62
    letexp   go to state 15
    lvalue   go to state 16
    condexp  go to state 17
    id       go to state 18


state 30

   21 exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 63
    letexp   go to state 15
    lvalue   go to state 16
    condexp  go to state 17
    id       go to state 18


state 31

   22 exp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 64
    letexp   go to state 15
    lvalue   go to state 16
    condexp  go to state 17
    id       go to state 18


state 32

   23 exp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 65
    letexp   go to state 15
    lvalue   go to state 16
    condexp  go to state 17
    id       go to state 18


state 33

   14 exp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 66
    letexp   go to state 15
    lvalue   go to state 16
    condexp  go to state 17
    id       go to state 18


state 34

   16 exp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 67
    letexp   go to state 15
    lvalue   go to state 16
    condexp  go to state 17
    id       go to state 18


state 35

   15 exp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 68
    letexp   go to state 15
    lvalue   go to state 16
    condexp  go to state 17
    id       go to state 18


state 36

   17 exp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 69
    letexp   go to state 15
    lvalue   go to state 16
    condexp  go to state 17
    id       go to state 18


state 37

   13 exp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 70
    letexp   go to state 15
    lvalue   go to state 16
    condexp  go to state 17
    id       go to state 18


state 38

   12 exp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 71
    letexp   go to state 15
    lvalue   go to state 16
    condexp  go to state 17
    id       go to state 18


state 39

   40 lvalue: lvalue LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 72
    letexp   go to state 15
    lvalue   go to state 16
    condexp  go to state 17
    id       go to state 18


state 40

   41 lvalue: lvalue DOT . id

    ID  shift, and go to state 1

    id  go to state 73


state 41

   26 exp: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 74
    letexp   go to state 15
    lvalue   go to state 16
    condexp  go to state 17
    id       go to state 18


state 42

    7 exp: id LPAREN . arglist RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 34 (arglist)

    exp         go to state 75
    letexp      go to state 15
    arglist     go to state 76
    nonarglist  go to state 77
    lvalue      go to state 16
    condexp     go to state 17
    id          go to state 18


state 43

   24 exp: id LBRACK . exp RBRACK OF exp
   39 lvalue: id LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 78
    letexp   go to state 15
    lvalue   go to state 16
    condexp  go to state 17
    id       go to state 18


state 44

   25 exp: id LBRACE . reclist RBRACE

    ID  shift, and go to state 1

    $default  reduce using rule 29 (reclist)

    reclist     go to state 79
    nonreclist  go to state 80
    id          go to state 81


state 45

   43 expseq: expseq SEMICOLON . primyexp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 2 (primyexp)

    primyexp  go to state 82
    exp       go to state 14
    letexp    go to state 15
    lvalue    go to state 16
    condexp   go to state 17
    id        go to state 18


state 46

    9 exp: LPAREN expseq RPAREN .

    $default  reduce using rule 9 (exp)


state 47

   44 condexp: IF exp THEN . exp ELSE exp
   45        | IF exp THEN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 83
    letexp   go to state 15
    lvalue   go to state 16
    condexp  go to state 17
    id       go to state 18


state 48

   46 condexp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 84
    letexp   go to state 15
    lvalue   go to state 16
    condexp  go to state 17
    id       go to state 18


state 49

   47 condexp: FOR id ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 85
    letexp   go to state 15
    lvalue   go to state 16
    condexp  go to state 17
    id       go to state 18


state 50

   33 letexp: LET decs IN . expseq END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 2 (primyexp)

    primyexp  go to state 19
    exp       go to state 14
    letexp    go to state 15
    lvalue    go to state 16
    expseq    go to state 86
    condexp   go to state 17
    id        go to state 18


state 51

   69 fundec: FUNCTION . id LPAREN tyfields RPAREN EQ exp
   70       | FUNCTION . id LPAREN tyfields RPAREN COLON id EQ exp

    ID  shift, and go to state 1

    id  go to state 87


state 52

   64 vardec: VAR . id ASSIGN exp
   65       | VAR . id COLON id ASSIGN exp

    ID  shift, and go to state 1

    id  go to state 88


state 53

   55 tydec: TYPE . id EQ ty

    ID  shift, and go to state 1

    id  go to state 89


state 54

   49 decs: decs dec .

    $default  reduce using rule 49 (decs)


state 55

   50 dec: tydecs .
   54 tydecs: tydecs . tydec

    TYPE  shift, and go to state 53

    $default  reduce using rule 50 (dec)

    tydec  go to state 90


state 56

   53 tydecs: tydec .

    $default  reduce using rule 53 (tydecs)


state 57

   51 dec: vardec .

    $default  reduce using rule 51 (dec)


state 58

   52 dec: fundecs .
   68 fundecs: fundecs . fundec

    FUNCTION  shift, and go to state 51

    $default  reduce using rule 52 (dec)

    fundec  go to state 91


state 59

   67 fundecs: fundec .

    $default  reduce using rule 67 (fundecs)


state 60

   12 exp: exp . OR exp
   13    | exp . AND exp
   14    | exp . LT exp
   15    | exp . GT exp
   16    | exp . LE exp
   17    | exp . GE exp
   18    | exp . PLUS exp
   18    | exp PLUS exp .
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   22    | exp . EQ exp
   23    | exp . NEQ exp

    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30

    $default  reduce using rule 18 (exp)


state 61

   12 exp: exp . OR exp
   13    | exp . AND exp
   14    | exp . LT exp
   15    | exp . GT exp
   16    | exp . LE exp
   17    | exp . GE exp
   18    | exp . PLUS exp
   19    | exp . MINUS exp
   19    | exp MINUS exp .
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   22    | exp . EQ exp
   23    | exp . NEQ exp

    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30

    $default  reduce using rule 19 (exp)


state 62

   12 exp: exp . OR exp
   13    | exp . AND exp
   14    | exp . LT exp
   15    | exp . GT exp
   16    | exp . LE exp
   17    | exp . GE exp
   18    | exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   20    | exp TIMES exp .
   21    | exp . DIVIDE exp
   22    | exp . EQ exp
   23    | exp . NEQ exp

    $default  reduce using rule 20 (exp)


state 63

   12 exp: exp . OR exp
   13    | exp . AND exp
   14    | exp . LT exp
   15    | exp . GT exp
   16    | exp . LE exp
   17    | exp . GE exp
   18    | exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   21    | exp DIVIDE exp .
   22    | exp . EQ exp
   23    | exp . NEQ exp

    $default  reduce using rule 21 (exp)


state 64

   12 exp: exp . OR exp
   13    | exp . AND exp
   14    | exp . LT exp
   15    | exp . GT exp
   16    | exp . LE exp
   17    | exp . GE exp
   18    | exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   22    | exp . EQ exp
   22    | exp EQ exp .
   23    | exp . NEQ exp

    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 22 (exp)


state 65

   12 exp: exp . OR exp
   13    | exp . AND exp
   14    | exp . LT exp
   15    | exp . GT exp
   16    | exp . LE exp
   17    | exp . GE exp
   18    | exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   23    | exp NEQ exp .

    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 23 (exp)


state 66

   12 exp: exp . OR exp
   13    | exp . AND exp
   14    | exp . LT exp
   14    | exp LT exp .
   15    | exp . GT exp
   16    | exp . LE exp
   17    | exp . GE exp
   18    | exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   22    | exp . EQ exp
   23    | exp . NEQ exp

    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 14 (exp)


state 67

   12 exp: exp . OR exp
   13    | exp . AND exp
   14    | exp . LT exp
   15    | exp . GT exp
   16    | exp . LE exp
   16    | exp LE exp .
   17    | exp . GE exp
   18    | exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   22    | exp . EQ exp
   23    | exp . NEQ exp

    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 16 (exp)


state 68

   12 exp: exp . OR exp
   13    | exp . AND exp
   14    | exp . LT exp
   15    | exp . GT exp
   15    | exp GT exp .
   16    | exp . LE exp
   17    | exp . GE exp
   18    | exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   22    | exp . EQ exp
   23    | exp . NEQ exp

    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 15 (exp)


state 69

   12 exp: exp . OR exp
   13    | exp . AND exp
   14    | exp . LT exp
   15    | exp . GT exp
   16    | exp . LE exp
   17    | exp . GE exp
   17    | exp GE exp .
   18    | exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   22    | exp . EQ exp
   23    | exp . NEQ exp

    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 17 (exp)


state 70

   12 exp: exp . OR exp
   13    | exp . AND exp
   13    | exp AND exp .
   14    | exp . LT exp
   15    | exp . GT exp
   16    | exp . LE exp
   17    | exp . GE exp
   18    | exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   22    | exp . EQ exp
   23    | exp . NEQ exp

    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36

    $default  reduce using rule 13 (exp)


state 71

   12 exp: exp . OR exp
   12    | exp OR exp .
   13    | exp . AND exp
   14    | exp . LT exp
   15    | exp . GT exp
   16    | exp . LE exp
   17    | exp . GE exp
   18    | exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   22    | exp . EQ exp
   23    | exp . NEQ exp

    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    AND     shift, and go to state 37

    $default  reduce using rule 12 (exp)


state 72

   12 exp: exp . OR exp
   13    | exp . AND exp
   14    | exp . LT exp
   15    | exp . GT exp
   16    | exp . LE exp
   17    | exp . GE exp
   18    | exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   40 lvalue: lvalue LBRACK exp . RBRACK

    RBRACK  shift, and go to state 92
    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    AND     shift, and go to state 37
    OR      shift, and go to state 38


state 73

   41 lvalue: lvalue DOT id .

    $default  reduce using rule 41 (lvalue)


state 74

   12 exp: exp . OR exp
   13    | exp . AND exp
   14    | exp . LT exp
   15    | exp . GT exp
   16    | exp . LE exp
   17    | exp . GE exp
   18    | exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   26    | lvalue ASSIGN exp .

    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    AND     shift, and go to state 37
    OR      shift, and go to state 38

    $default  reduce using rule 26 (exp)


state 75

   12 exp: exp . OR exp
   13    | exp . AND exp
   14    | exp . LT exp
   15    | exp . GT exp
   16    | exp . LE exp
   17    | exp . GE exp
   18    | exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   36 nonarglist: exp .

    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    AND     shift, and go to state 37
    OR      shift, and go to state 38

    $default  reduce using rule 36 (nonarglist)


state 76

    7 exp: id LPAREN arglist . RPAREN

    RPAREN  shift, and go to state 93


state 77

   35 arglist: nonarglist .
   37 nonarglist: nonarglist . COMMA exp

    COMMA  shift, and go to state 94

    $default  reduce using rule 35 (arglist)


state 78

   12 exp: exp . OR exp
   13    | exp . AND exp
   14    | exp . LT exp
   15    | exp . GT exp
   16    | exp . LE exp
   17    | exp . GE exp
   18    | exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   24    | id LBRACK exp . RBRACK OF exp
   39 lvalue: id LBRACK exp . RBRACK

    RBRACK  shift, and go to state 95
    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    AND     shift, and go to state 37
    OR      shift, and go to state 38


state 79

   25 exp: id LBRACE reclist . RBRACE

    RBRACE  shift, and go to state 96


state 80

   30 reclist: nonreclist .
   32 nonreclist: nonreclist . COMMA id EQ exp

    COMMA  shift, and go to state 97

    $default  reduce using rule 30 (reclist)


state 81

   31 nonreclist: id . EQ exp

    EQ  shift, and go to state 98


state 82

   43 expseq: expseq SEMICOLON primyexp .

    $default  reduce using rule 43 (expseq)


state 83

   12 exp: exp . OR exp
   13    | exp . AND exp
   14    | exp . LT exp
   15    | exp . GT exp
   16    | exp . LE exp
   17    | exp . GE exp
   18    | exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   44 condexp: IF exp THEN exp . ELSE exp
   45        | IF exp THEN exp .

    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    AND     shift, and go to state 37
    OR      shift, and go to state 38
    ELSE    shift, and go to state 99

    $default  reduce using rule 45 (condexp)


state 84

   12 exp: exp . OR exp
   13    | exp . AND exp
   14    | exp . LT exp
   15    | exp . GT exp
   16    | exp . LE exp
   17    | exp . GE exp
   18    | exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   46 condexp: WHILE exp DO exp .

    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    AND     shift, and go to state 37
    OR      shift, and go to state 38

    $default  reduce using rule 46 (condexp)


state 85

   12 exp: exp . OR exp
   13    | exp . AND exp
   14    | exp . LT exp
   15    | exp . GT exp
   16    | exp . LE exp
   17    | exp . GE exp
   18    | exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   47 condexp: FOR id ASSIGN exp . TO exp DO exp

    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    AND     shift, and go to state 37
    OR      shift, and go to state 38
    TO      shift, and go to state 100


state 86

   33 letexp: LET decs IN expseq . END
   43 expseq: expseq . SEMICOLON primyexp

    SEMICOLON  shift, and go to state 45
    END        shift, and go to state 101


state 87

   69 fundec: FUNCTION id . LPAREN tyfields RPAREN EQ exp
   70       | FUNCTION id . LPAREN tyfields RPAREN COLON id EQ exp

    LPAREN  shift, and go to state 102


state 88

   64 vardec: VAR id . ASSIGN exp
   65       | VAR id . COLON id ASSIGN exp

    COLON   shift, and go to state 103
    ASSIGN  shift, and go to state 104


state 89

   55 tydec: TYPE id . EQ ty

    EQ  shift, and go to state 105


state 90

   54 tydecs: tydecs tydec .

    $default  reduce using rule 54 (tydecs)


state 91

   68 fundecs: fundecs fundec .

    $default  reduce using rule 68 (fundecs)


state 92

   40 lvalue: lvalue LBRACK exp RBRACK .

    $default  reduce using rule 40 (lvalue)


state 93

    7 exp: id LPAREN arglist RPAREN .

    $default  reduce using rule 7 (exp)


state 94

   37 nonarglist: nonarglist COMMA . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 106
    letexp   go to state 15
    lvalue   go to state 16
    condexp  go to state 17
    id       go to state 18


state 95

   24 exp: id LBRACK exp RBRACK . OF exp
   39 lvalue: id LBRACK exp RBRACK .

    OF  shift, and go to state 107

    $default  reduce using rule 39 (lvalue)


state 96

   25 exp: id LBRACE reclist RBRACE .

    $default  reduce using rule 25 (exp)


state 97

   32 nonreclist: nonreclist COMMA . id EQ exp

    ID  shift, and go to state 1

    id  go to state 108


state 98

   31 nonreclist: id EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 109
    letexp   go to state 15
    lvalue   go to state 16
    condexp  go to state 17
    id       go to state 18


state 99

   44 condexp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 110
    letexp   go to state 15
    lvalue   go to state 16
    condexp  go to state 17
    id       go to state 18


state 100

   47 condexp: FOR id ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 111
    letexp   go to state 15
    lvalue   go to state 16
    condexp  go to state 17
    id       go to state 18


state 101

   33 letexp: LET decs IN expseq END .

    $default  reduce using rule 33 (letexp)


state 102

   69 fundec: FUNCTION id LPAREN . tyfields RPAREN EQ exp
   70       | FUNCTION id LPAREN . tyfields RPAREN COLON id EQ exp

    ID  shift, and go to state 1

    $default  reduce using rule 59 (tyfields)

    tyfields   go to state 112
    tyfields1  go to state 113
    tyfield    go to state 114
    id         go to state 115


state 103

   65 vardec: VAR id COLON . id ASSIGN exp

    ID  shift, and go to state 1

    id  go to state 116


state 104

   64 vardec: VAR id ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 117
    letexp   go to state 15
    lvalue   go to state 16
    condexp  go to state 17
    id       go to state 18


state 105

   55 tydec: TYPE id EQ . ty

    ID      shift, and go to state 1
    LBRACE  shift, and go to state 118
    ARRAY   shift, and go to state 119

    ty  go to state 120
    id  go to state 121


state 106

   12 exp: exp . OR exp
   13    | exp . AND exp
   14    | exp . LT exp
   15    | exp . GT exp
   16    | exp . LE exp
   17    | exp . GE exp
   18    | exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   37 nonarglist: nonarglist COMMA exp .

    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    AND     shift, and go to state 37
    OR      shift, and go to state 38

    $default  reduce using rule 37 (nonarglist)


state 107

   24 exp: id LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 122
    letexp   go to state 15
    lvalue   go to state 16
    condexp  go to state 17
    id       go to state 18


state 108

   32 nonreclist: nonreclist COMMA id . EQ exp

    EQ  shift, and go to state 123


state 109

   12 exp: exp . OR exp
   13    | exp . AND exp
   14    | exp . LT exp
   15    | exp . GT exp
   16    | exp . LE exp
   17    | exp . GE exp
   18    | exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   31 nonreclist: id EQ exp .

    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    AND     shift, and go to state 37
    OR      shift, and go to state 38

    $default  reduce using rule 31 (nonreclist)


state 110

   12 exp: exp . OR exp
   13    | exp . AND exp
   14    | exp . LT exp
   15    | exp . GT exp
   16    | exp . LE exp
   17    | exp . GE exp
   18    | exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   44 condexp: IF exp THEN exp ELSE exp .

    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    AND     shift, and go to state 37
    OR      shift, and go to state 38

    $default  reduce using rule 44 (condexp)


state 111

   12 exp: exp . OR exp
   13    | exp . AND exp
   14    | exp . LT exp
   15    | exp . GT exp
   16    | exp . LE exp
   17    | exp . GE exp
   18    | exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   47 condexp: FOR id ASSIGN exp TO exp . DO exp

    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    AND     shift, and go to state 37
    OR      shift, and go to state 38
    DO      shift, and go to state 124


state 112

   69 fundec: FUNCTION id LPAREN tyfields . RPAREN EQ exp
   70       | FUNCTION id LPAREN tyfields . RPAREN COLON id EQ exp

    RPAREN  shift, and go to state 125


state 113

   60 tyfields: tyfields1 .
   62 tyfields1: tyfields1 . COMMA tyfield

    COMMA  shift, and go to state 126

    $default  reduce using rule 60 (tyfields)


state 114

   61 tyfields1: tyfield .

    $default  reduce using rule 61 (tyfields1)


state 115

   63 tyfield: id . COLON id

    COLON  shift, and go to state 127


state 116

   65 vardec: VAR id COLON id . ASSIGN exp

    ASSIGN  shift, and go to state 128


state 117

   12 exp: exp . OR exp
   13    | exp . AND exp
   14    | exp . LT exp
   15    | exp . GT exp
   16    | exp . LE exp
   17    | exp . GE exp
   18    | exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   64 vardec: VAR id ASSIGN exp .

    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    AND     shift, and go to state 37
    OR      shift, and go to state 38

    $default  reduce using rule 64 (vardec)


state 118

   57 ty: LBRACE . tyfields RBRACE

    ID  shift, and go to state 1

    $default  reduce using rule 59 (tyfields)

    tyfields   go to state 129
    tyfields1  go to state 113
    tyfield    go to state 114
    id         go to state 115


state 119

   58 ty: ARRAY . OF id

    OF  shift, and go to state 130


state 120

   55 tydec: TYPE id EQ ty .

    $default  reduce using rule 55 (tydec)


state 121

   56 ty: id .

    $default  reduce using rule 56 (ty)


state 122

   12 exp: exp . OR exp
   13    | exp . AND exp
   14    | exp . LT exp
   15    | exp . GT exp
   16    | exp . LE exp
   17    | exp . GE exp
   18    | exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   24    | id LBRACK exp RBRACK OF exp .

    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    AND     shift, and go to state 37
    OR      shift, and go to state 38

    $default  reduce using rule 24 (exp)


state 123

   32 nonreclist: nonreclist COMMA id EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 131
    letexp   go to state 15
    lvalue   go to state 16
    condexp  go to state 17
    id       go to state 18


state 124

   47 condexp: FOR id ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 132
    letexp   go to state 15
    lvalue   go to state 16
    condexp  go to state 17
    id       go to state 18


state 125

   69 fundec: FUNCTION id LPAREN tyfields RPAREN . EQ exp
   70       | FUNCTION id LPAREN tyfields RPAREN . COLON id EQ exp

    COLON  shift, and go to state 133
    EQ     shift, and go to state 134


state 126

   62 tyfields1: tyfields1 COMMA . tyfield

    ID  shift, and go to state 1

    tyfield  go to state 135
    id       go to state 115


state 127

   63 tyfield: id COLON . id

    ID  shift, and go to state 1

    id  go to state 136


state 128

   65 vardec: VAR id COLON id ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 137
    letexp   go to state 15
    lvalue   go to state 16
    condexp  go to state 17
    id       go to state 18


state 129

   57 ty: LBRACE tyfields . RBRACE

    RBRACE  shift, and go to state 138


state 130

   58 ty: ARRAY OF . id

    ID  shift, and go to state 1

    id  go to state 139


state 131

   12 exp: exp . OR exp
   13    | exp . AND exp
   14    | exp . LT exp
   15    | exp . GT exp
   16    | exp . LE exp
   17    | exp . GE exp
   18    | exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   32 nonreclist: nonreclist COMMA id EQ exp .

    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    AND     shift, and go to state 37
    OR      shift, and go to state 38

    $default  reduce using rule 32 (nonreclist)


state 132

   12 exp: exp . OR exp
   13    | exp . AND exp
   14    | exp . LT exp
   15    | exp . GT exp
   16    | exp . LE exp
   17    | exp . GE exp
   18    | exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   47 condexp: FOR id ASSIGN exp TO exp DO exp .

    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    AND     shift, and go to state 37
    OR      shift, and go to state 38

    $default  reduce using rule 47 (condexp)


state 133

   70 fundec: FUNCTION id LPAREN tyfields RPAREN COLON . id EQ exp

    ID  shift, and go to state 1

    id  go to state 140


state 134

   69 fundec: FUNCTION id LPAREN tyfields RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 141
    letexp   go to state 15
    lvalue   go to state 16
    condexp  go to state 17
    id       go to state 18


state 135

   62 tyfields1: tyfields1 COMMA tyfield .

    $default  reduce using rule 62 (tyfields1)


state 136

   63 tyfield: id COLON id .

    $default  reduce using rule 63 (tyfield)


state 137

   12 exp: exp . OR exp
   13    | exp . AND exp
   14    | exp . LT exp
   15    | exp . GT exp
   16    | exp . LE exp
   17    | exp . GE exp
   18    | exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   65 vardec: VAR id COLON id ASSIGN exp .

    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    AND     shift, and go to state 37
    OR      shift, and go to state 38

    $default  reduce using rule 65 (vardec)


state 138

   57 ty: LBRACE tyfields RBRACE .

    $default  reduce using rule 57 (ty)


state 139

   58 ty: ARRAY OF id .

    $default  reduce using rule 58 (ty)


state 140

   70 fundec: FUNCTION id LPAREN tyfields RPAREN COLON id . EQ exp

    EQ  shift, and go to state 142


state 141

   12 exp: exp . OR exp
   13    | exp . AND exp
   14    | exp . LT exp
   15    | exp . GT exp
   16    | exp . LE exp
   17    | exp . GE exp
   18    | exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   69 fundec: FUNCTION id LPAREN tyfields RPAREN EQ exp .

    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    AND     shift, and go to state 37
    OR      shift, and go to state 38

    $default  reduce using rule 69 (fundec)


state 142

   70 fundec: FUNCTION id LPAREN tyfields RPAREN COLON id EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 143
    letexp   go to state 15
    lvalue   go to state 16
    condexp  go to state 17
    id       go to state 18


state 143

   12 exp: exp . OR exp
   13    | exp . AND exp
   14    | exp . LT exp
   15    | exp . GT exp
   16    | exp . LE exp
   17    | exp . GE exp
   18    | exp . PLUS exp
   19    | exp . MINUS exp
   20    | exp . TIMES exp
   21    | exp . DIVIDE exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   70 fundec: FUNCTION id LPAREN tyfields RPAREN COLON id EQ exp .

    PLUS    shift, and go to state 27
    MINUS   shift, and go to state 28
    TIMES   shift, and go to state 29
    DIVIDE  shift, and go to state 30
    EQ      shift, and go to state 31
    NEQ     shift, and go to state 32
    LT      shift, and go to state 33
    LE      shift, and go to state 34
    GT      shift, and go to state 35
    GE      shift, and go to state 36
    AND     shift, and go to state 37
    OR      shift, and go to state 38

    $default  reduce using rule 70 (fundec)
